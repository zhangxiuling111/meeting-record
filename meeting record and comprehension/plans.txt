Next meeting (14 Jun 2018)

- Report the analysis on the code for the paper "Model Checking Paxos in Spin", focusing on how liveness fails in the PROMELA model.

- Discuss two new papers:
  * Fast Paxos (Lamport 2005)
  * In Search of an Understandable Consensus Algorithm (Ongaro and Ousterhout 2014)
  
- Possible directions:
  * Modelling stronger assumptions that ensure progress properties for Paxos like algorithms
  * A purely nondeterministic model for Raft/Zab (also lists sources of livelock/nonprogress)
  
- Other thoughts
  * probabilistic model on Paxos/Raft/Zab, by using e.g., in PRISM (http://www.prismmodelchecker.org)
  * Byzantine models (with adversaries nodes)
  * Compare the efficiencies between leader election model and Blockchain models (PoW, PoS), which works for permissioned (private or consortum) blockchains and public blockchains, respectively

Next meeting in Aug 2018 (to be determined)

- TO wrap up crash failure model (共识算法中的结点失败模型)
  * Impossibility result of 1-crash consensus in asynchronous model (Fischer 1985) even if there exists time limit for message delivery
  * Raft is not asynchronous model (Otherwise its initial leader election will fail)
  * Consensus model classification: Lottery based (e.g., Raft) and voting based (e.g., Paxos)
  
- May start looking at Byzantine failure model（共识算法中的拜占庭模型）
  * To start up: Wikipedia (https://en.wikipedia.org/wiki/Byzantine_fault_tolerance), 
    Lamport's paper (The Byzantine Generals Problem July 5, 1982) 
    and Fokkink's book (2017)
  * Castro and Liskov's Practical Byzantine failure tolerance paper 
    (OSDI 1999, https://wenku.baidu.com/view/3cc69308bb68a98271fefa38.html)，
    有一些有趣的中文讲解，比如：https://blog.csdn.net/bluecloudmatrix/article/details/39154739，
    还有 https://www.jianshu.com/p/fb5edf031afd
  * To understand the difference of n >= 2t+1 in the crash failure model and n >= 3t+1 in the Byzantine failure model, 
    where n is the total number of nodes and t is the maximal number of failure nodes
  
